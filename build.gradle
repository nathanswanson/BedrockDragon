plugins {
    id('java')
    id('com.diffplug.spotless') version '5.16.0'
    id('org.jetbrains.kotlin.jvm') version '1.5.31'
    id('org.jetbrains.kotlin.plugin.serialization') version '1.5.31'

}

group 'com.bedrockdragon'
version '1.0'


repositories {
    mavenLocal()
    maven {
        url "https://maven.pkg.jetbrains.space/bedrockdragon/p/bedrockdragon/kotlin-math"
        credentials {
            username = spaceUsername
            password = spacePassword
        }
    }
    maven {
        url "https://maven.pkg.jetbrains.space/bedrockdragon/p/bedrockdragon/commonrepo"
        credentials {
            username = spaceUsername
            password = spacePassword
        }
    }
    mavenCentral()
}

dependencies {

    implementation "bedrockDragon:kotlin-math:1.0"
    implementation "bedrockDragon:Common:1.0.1"

    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.31"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.31'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'

    implementation("net.benwoodworth.knbt:knbt:0.11.1")
    implementation 'commons-io:commons-io:20030203.000550'
    implementation 'it.unimi.dsi:fastutil:8.5.6'
    implementation 'it.unimi.dsi:fastutil-core:8.5.6'
    implementation 'io.netty:netty-all:4.1.69.Final'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'
    implementation 'io.github.microutils:kotlin-logging-jvm:2.0.11'
    implementation("net.benwoodworth.knbt:knbt:0.11.1")
    implementation("com.nimbusds:nimbus-jose-jwt:9.15.2")

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}